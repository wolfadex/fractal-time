service cloud.firestore {
  match /databases/{database}/documents {
    match /histories/{historyId} {
      allow read: if request.auth.uid != null;
      allow update, delete:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants
          && request.resource.data.name is string
          && request.auth.uid in request.resource.data.participants;
      allow create:
        if request.auth.uid != null
          && request.resource.data.name != null
          && request.auth.uid in request.resource.data.participants;
    }

    match /periods/{periodId} {
      allow read:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants;
      allow update, delete:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants
          && request.resource.data.history != null
          && request.resource.data.order != null
          && request.resource.data.title != null
          && request.resource.data.description != null
          && request.resource.data.tone != null;
      allow create:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants
          && request.resource.data.history != null
          && request.resource.data.order != null
          && request.resource.data.title != null
          && request.resource.data.description != null
          && request.resource.data.tone != null;
    }

    match /events/{eventId} {
      allow read:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants;
      allow update, delete:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants
          && request.resource.data.period != null
          && request.resource.data.order != null
          && request.resource.data.title != null
          && request.resource.data.description != null
          && request.resource.data.tone != null;
      allow create:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants
          && request.resource.data.period != null
          && request.resource.data.order != null
          && request.resource.data.title != null
          && request.resource.data.description != null
          && request.resource.data.tone != null;
    }

    match /scenes/{sceneId} {
      allow read:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants;
      allow update, delete:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants
          && request.resource.data.event != null
          && request.resource.data.order != null
          && request.resource.data.dictated != null;
      allow create:
        if request.auth.uid != null
          && request.auth.uid in resource.data.participants
          && request.resource.data.event != null
          && request.resource.data.order != null
          && request.resource.data.dictated != null;
    }

    match /users/{userId} {
      allow read, create: if request.auth.uid != null;
      allow update if request.auth.uid == user;
    }
  }
}